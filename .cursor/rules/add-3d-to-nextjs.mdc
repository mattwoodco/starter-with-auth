---
description: add 3d to next.js
globs: 
alwaysApply: false
---
- update deps with `@react-three/drei@latest @react-three/fiber three@latest`
- instead of dynamic import, import a the scene in a client wrapper component 
- make the 3d view a proper isometric view
- use dynamic import with loading fallback
- You need to add three to transpilePackages property in next.config.js: transpilePackages: ['three'],

- `scene.tsx`:
  ```typescript
  "use client";

  import { OrbitControls } from "@react-three/drei";
  import { Canvas } from "@react-three/fiber";
  import { Cube } from "./Cube";

  export function Scene() {
    return (
      <div className="w-full">
        <Canvas>
          <ambientLight intensity={0.2} />
          <directionalLight position={[5, 5, 5]} intensity={1} castShadow />
          <pointLight position={[-5, -5, -5]} intensity={0.2} />
          <spotLight
            position={[10, 10, -10]}
            angle={0.15}
            penumbra={1}
            intensity={0.5}
          />
          <Cube />
          <OrbitControls />
        </Canvas>
      </div>
    );
  }
  ```

- `cube.tsx`
  ```typescript
  "use client";

  import { useFrame } from "@react-three/fiber";
  import { useRef } from "react";
  import { Mesh } from "three";

  export function Cube() {
    const meshRef = useRef<Mesh>(null);

    useFrame((state, delta) => {
      if (meshRef.current) {
        meshRef.current.rotation.x += delta * 0.5;
        meshRef.current.rotation.y += delta * 0.5;
      }
    });

    return (
      <mesh ref={meshRef}>
        <boxGeometry args={[2, 2, 2]} />
        <meshStandardMaterial color="#4f46e5" />
      </mesh>
    );
  }
  ```

- Wrap 3D elements in `<Suspense/>` for better loading behavior:
  ```typescript
  <Suspense fallback={null}>
    <Scene/>
  </Suspense>
  ```